Deirdre Barg 209:DB Project

1. Display all contents of the Clients table
    SELECT * FROM CLIENT; // * Gets Everything from table
ClientID  ClientFirstName  ClientLastName  ClientDOB  Occupation                
--------  ---------------  --------------  ---------  --------------------------
1         Kaiden           Hill            2006       Student                   
2         Alina            Morton          2010       Student                   
3         Fania            Brooks          1983       Food Scientist            
4         Courtney         Jensen          2006       Student                   
5         Brittany         Hill            1983       Firefighter               
6         Max              Rogers          2005       Student                   
7         Margaret         McCarthy        1981       School Psychologist       
8         Julie            McCarthy        1973       Professor                 
9         Ken              McCarthy        1974       Securities Clerk          
10        Britany          OQuinn          1984       Violinist                 
11        Conner           Gardner         1998       Licensed Massage Therapist
12        Mya              Austin          1960       Parquet Floor Layer       
13        Thierry          Rogers          2004       Student                   
14        Eloise           Rogers          1984       Computer Security Manager 
15        Gerard           Jackson         1979       Oil Exploration Engineer  
16        Randy            Day             1986       Aircraft Electrician      
17        Jodie            Page            1990       Manufacturing Director    
18        Coral            Rice            1996       Window Washer             
19        Ayman            Austin          2002       Student                   
20        Jaxson           Austin          1999       Repair Worker             
21        Joel             Austin          1973       Police Officer            
22        Alina            Austin          2010       Student                   
23        Elin             Austin          1962       Payroll Clerk             
24        Ophelia          Wolf            2004       Student                   
25        Eliot            McGuire         1967       Dentist                   
26        Peter            McKinney        1968       Professor                 
27        Annabella        Henry           1974       Nurse                     
28        Anastasia        Baker           2001       Student                   
29        Tyler            Baker           1984       Police Officer            
30        Lilian           Ross            1983       Insurance Agent           
31        Thierry          Arnold          1975       Bus Driver                
32        Angelina         Rowe            1979       Firefighter               
33        Marcia           Rowe            1974       Health Educator           
34        Martin           Rowe            1976       Ship Engineer             
35        Adeline          Rowe            2005       Student                   
36        Colette          Rowe            1963       Professor                 
37        Diane            Clark           1975       Payroll Clerk             
38        Caroline         Clark           1960       Dentist                   
39        Dalton           Clayton         1982       Police Officer            
40        Steve            Clayton         1990       Bus Driver                
41        Melanie          Clayton         1987       Computer Engineer         
42        Alana            Wilson          2007       Student                   
43        Carson           Byrne           1995       Food Scientist            
44        Conrad           Byrne           2007       Student                   
45        Ryan             Porter          2008       Student                   
46        Elin             Porter          1978       Computer Programmer       
47        Tyler            Harvey          2007       Student                   
48        Arya             Harvey          2008       Student                   
49        Serena           Harvey          1978       School Teacher            
50        Lilly            Franklin        1976       Doctor                    
51        Mai              Franklin        1994       Dentist                   
52        John             Franklin        1999       Firefighter               
53        Judy             Franklin        1995       Firefighter               
54        Katy             Lloyd           1992       School Teacher            
55        Tamara           Allen           1963       Ship Engineer             
56        Maxim            Lyons           1985       Police Officer            
57        Allan            Lyons           1983       Computer Engineer         
58        Marc             Harris          1980       School Teacher            
59        Elin             Young           2009       Student                   
60        Diana            Young           2008       Student                   
61        Diane            Young           2006       Student                   
62        Alana            Bird            2003       Student                   
63        Anna             Becker          1979       Security Agent            
64        Katie            Grant           1977       Manager                   
65        Joan             Grant           2010       Student                   
66        Bryan            Bell            2001       Student                   
67        Belle            Miller          1970       Professor                 
68        Peggy            Stevens         1990       Bus Driver                
69        Steve            Williamson      1975       HR Clerk                  
70        Tyler            Williamson      1999       Doctor                    
71        Izabelle         Williamson      1990       Systems Analyst           
72        Annabel          Williamson      1960       Cashier                   
73        Mohamed          Waters          1966       Insurance Agent           
74        Marion           Newman          1970       Computer Programmer       
75        Ada              Williams        1986       Computer Programmer       
76        Sean             Scott           1983       Bus Driver                
77        Farrah           Scott           1974       Ship Engineer             
78        Christine        Lambert         1973       School Teacher            
79        Alysha           Lambert         2007       Student                   
80        Maia             Grant           1984       School Teacher            


2. First names, last names, ages and occupations of all clients
    CREATE INDEX idx_client_name ON Client (ClientFirstName, ClientLastName);
    CREATE INDEX idx_client_dob ON Client (ClientDoB);
    CREATE INDEX idx_client_occupation ON Client (Occupation);
    SELECT ClientFirstName, ClientLastName, (2024 - ClientDOB) AS Age, Occupation FROM Client; 
    //This year minus the birth year gets age and the AS age makes it the column name

ClientFirstName  ClientLastName  Age  Occupation                
---------------  --------------  ---  --------------------------
Kaiden           Hill            18   Student                   
Alina            Morton          14   Student                   
Fania            Brooks          41   Food Scientist            
Courtney         Jensen          18   Student                   
Brittany         Hill            41   Firefighter               
Max              Rogers          19   Student                   
Margaret         McCarthy        43   School Psychologist       
Julie            McCarthy        51   Professor                 
Ken              McCarthy        50   Securities Clerk          
Britany          OQuinn          40   Violinist                 
Conner           Gardner         26   Licensed Massage Therapist
Mya              Austin          64   Parquet Floor Layer       
Thierry          Rogers          20   Student                   
Eloise           Rogers          40   Computer Security Manager 
Gerard           Jackson         45   Oil Exploration Engineer  
Randy            Day             38   Aircraft Electrician      
Jodie            Page            34   Manufacturing Director    
Coral            Rice            28   Window Washer             
Ayman            Austin          22   Student                   
Jaxson           Austin          25   Repair Worker             
Joel             Austin          51   Police Officer            
Alina            Austin          14   Student                   
Elin             Austin          62   Payroll Clerk             
Ophelia          Wolf            20   Student                   
Eliot            McGuire         57   Dentist                   
Peter            McKinney        56   Professor                 
Annabella        Henry           50   Nurse                     
Anastasia        Baker           23   Student                   
Tyler            Baker           40   Police Officer            
Lilian           Ross            41   Insurance Agent           
Thierry          Arnold          49   Bus Driver                
Angelina         Rowe            45   Firefighter               
Marcia           Rowe            50   Health Educator           
Martin           Rowe            48   Ship Engineer             
Adeline          Rowe            19   Student                   
Colette          Rowe            61   Professor                 
Diane            Clark           49   Payroll Clerk             
Caroline         Clark           64   Dentist                   
Dalton           Clayton         42   Police Officer            
Steve            Clayton         34   Bus Driver                
Melanie          Clayton         37   Computer Engineer         
Alana            Wilson          17   Student                   
Carson           Byrne           29   Food Scientist            
Conrad           Byrne           17   Student                   
Ryan             Porter          16   Student                   
Elin             Porter          46   Computer Programmer       
Tyler            Harvey          17   Student                   
Arya             Harvey          16   Student                   
Serena           Harvey          46   School Teacher            
Lilly            Franklin        48   Doctor                    
Mai              Franklin        30   Dentist                   
John             Franklin        25   Firefighter               
Judy             Franklin        29   Firefighter               
Katy             Lloyd           32   School Teacher            
Tamara           Allen           61   Ship Engineer             
Maxim            Lyons           39   Police Officer            
Allan            Lyons           41   Computer Engineer         
Marc             Harris          44   School Teacher            
Elin             Young           15   Student                   
Diana            Young           16   Student                   
Diane            Young           18   Student                   
Alana            Bird            21   Student                   
Anna             Becker          45   Security Agent            
Katie            Grant           47   Manager                   
Joan             Grant           14   Student                   
Bryan            Bell            23   Student                   
Belle            Miller          54   Professor                 
Peggy            Stevens         34   Bus Driver                
Steve            Williamson      49   HR Clerk                  
Tyler            Williamson      25   Doctor                    
Izabelle         Williamson      34   Systems Analyst           
Annabel          Williamson      64   Cashier                   
Mohamed          Waters          58   Insurance Agent           
Marion           Newman          54   Computer Programmer       
Ada              Williams        38   Computer Programmer       
Sean             Scott           41   Bus Driver                
Farrah           Scott           50   Ship Engineer             
Christine        Lambert         51   School Teacher            
Alysha           Lambert         17   Student                   
Maia             Grant           40   School Teacher            


3. First and last names of clients that borrowed books in March 2018
    CREATE INDEX idx_borrow_client_id ON Borrower (ClientID);
    SELECT c.ClientFirstName, c.ClientLastName
    FROM Client c //the c shortens the command instead of saying ClientID from client table = ClientID from Borrower table with more subqueries
    JOIN Borrower b ON c.ClientID = b.ClientID //Creating a join of the desired data
    WHERE b.BorrowDate BETWEEN '2018-03-01' AND '2018-03-31';

ClientFirstName  ClientLastName
---------------  --------------
Maia             Grant         
Marcia           Rowe          
Alysha           Lambert       
Tyler            Baker         
Katy             Lloyd         
Angelina         Rowe          
Gerard           Jackson       
Carson           Byrne         

4. First and last names of the top 5 authors clients borrowed in 2017
    CREATE INDEX idx_borrow_date ON Borrower (BorrowDate);
    SELECT a.AuthorFirstName, a.AuthorLastName
    FROM Author a //Using a to shorten Query
    JOIN Book b ON a.AuthorID = b.AuthorID // I want the primary key in Author to match the Foreign key in Book
    JOIN Borrower br ON b.BookID = br.BookID
    WHERE br.BorrowDate BETWEEN '2017-01-01' AND '2017-12-31'
    GROUP BY a.AuthorID // Groups similar
    ORDER BY COUNT(br.BorrowID) DESC //Descending order
    LIMIT 5;

AuthorFirstName  AuthorLastName
---------------  --------------
Logan            Moore         
Elena            Martin        
Sofia            Smith         
Maria            Brown         
Helena           Adams     


5. Nationalities of the least 5 authors that clients borrowed during the years 2015-2017
    SELECT a.AuthorNationality
    FROM Author a
    JOIN Book b ON a.AuthorID = b.AuthorID //I want the Author PK = to the Book FK
    JOIN Borrower br ON b.BookID = br.BookID
    WHERE br.BorrowDate BETWEEN '2015-01-01' AND '2017-12-31'
    GROUP BY a.AuthorID
    ORDER BY COUNT(br.BorrowID) ASC
    LIMIT 5;

AuthorNationality
-----------------
Spain            
Canada           
USA              
USA              
Great Britain    

6. The book that was most borrowed during the years 2015-2017
    SELECT b.BookTitle, COUNT(br.BorrowID) AS BorrowCount
    FROM Book b
    JOIN Borrower br ON b.BookID = br.BookID
    WHERE br.BorrowDate BETWEEN '2015-01-01' AND '2017-12-31'
    GROUP BY b.BookID
    ORDER BY BorrowCount DESC
    LIMIT 1;

BookTitle          BorrowCount
-----------------  -----------
The perfect match  13   

7. Top borrowed genres for client born in years 1970-1980
    CREATE INDEX idx_book_genre ON Book (Genre);
    SELECT b.Genre, COUNT(br.BorrowID) AS BorrowCount
    FROM Client c
    JOIN Borrower br ON c.ClientID = br.ClientID
    JOIN Book b ON br.BookID = b.BookID
    WHERE c.ClientDoB BETWEEN 1970 AND 1980
    GROUP BY b.Genre
    ORDER BY BorrowCount DESC;

Genre       BorrowCount
----------  -----------
Science     24         
Fiction     16         
Well being  15         
Humor       5          
Society     4          
Literature  3          
Law         3          
History     3          
Children    3          


8. Top 5 occupations that borrowed the most in 2016
    SELECT c.Occupation, COUNT(br.BorrowID) AS BorrowCount
    FROM Client c //Doing the same thing as the other Queries 
    JOIN Borrower br ON c.ClientID = br.ClientID
    WHERE br.BorrowDate BETWEEN '2016-01-01' AND '2016-12-31'
    GROUP BY c.Occupation
    ORDER BY BorrowCount DESC
    LIMIT 5;

Occupation           BorrowCount
-------------------  -----------
Student              32         
Bus Driver           8          
Dentist              6          
Computer Programmer  6          
School Teacher       5     



9. Average number of borrowed books by job title
    //Use AVE for average and COUNT to count total
    //I have already made ideal indexes
    SELECT Occupation, AVG(borrow_count) AS AvgBorrowedBooks
    FROM ( //subquery formatting
    SELECT c.ClientID, c.Occupation, COUNT(br.BorrowID) AS borrow_count
    FROM Client c
    LEFT JOIN Borrower br ON c.ClientID = br.ClientID
    GROUP BY c.ClientID, c.Occupation
    ) AS subquery
    GROUP BY subquery.Occupation;

Occupation                  AvgBorrowedBooks
--------------------------  ----------------
Aircraft Electrician        2.0             
Bus Driver                  4.0             
Cashier                     5.0             
Computer Engineer           3.0             
Computer Programmer         5.66666666666667
Computer Security Manager   6.0             
Dentist                     5.66666666666667
Doctor                      4.0             
Firefighter                 3.25            
Food Scientist              2.5             
HR Clerk                    4.0             
Health Educator             2.0             
Insurance Agent             4.0             
Licensed Massage Therapist  2.0             
Manager                     3.0             
Manufacturing Director      5.0             
Nurse                       7.0             
Oil Exploration Engineer    5.0             
Parquet Floor Layer         2.0             
Payroll Clerk               3.0             
Police Officer              4.5             
Professor                   3.5             
Repair Worker               3.0             
School Psychologist         2.0             
School Teacher              3.6             
Securities Clerk            2.0             
Security Agent              2.0             
Ship Engineer               2.66666666666667
Student                     3.81818181818182
Systems Analyst             4.0             
Violinist                   4.0             
Window Washer               2.0             
 

10. Create a VIEW and display the titles that were borrowed by at least 20% of clients
    //Im going to get the 20% of clients by using this query to get total, I could also just look at my insert client file
    SELECT COUNT(*) AS TotalClients FROM Client; // This will return 80 and 20% of 80 = 16
    CREATE VIEW PopularBooks AS
    SELECT b.BookTitle
    FROM Book b
    JOIN Borrower br ON b.BookID = br.BookID
    GROUP BY b.BookID, b.BookTitle
    HAVING COUNT(DISTINCT br.ClientID) >= 16;
    //I was having some trouble with this beacause I accidentally created one with the wront contents with the same
    name so I was getting an error so I deleted the view in order to make it again, this is what I used:
    DROP VIEW IF EXISTS PopularBooks;
    // Then to see my new view
    SELECT * FROM PopularBooks;

BookTitle              
-----------------------
Electrical transformers


11. The top month of borrows in 2017
    //Im going to use my borrow-date index(well, my db is going to use it on its path)
    //Since I stored my Borrow dates as Strings, I have to use substrings in order to parse through them.
    SELECT substr(br.BorrowDate, 1, 7) AS Month, COUNT(br.BorrowID) AS BorrowCount // this extracts the year and date from my String
    FROM Borrower br
    WHERE substr(br.BorrowDate, 1, 4) = '2017' //Filters results to only 2017 dates
    GROUP BY substr(br.BorrowDate, 1, 7) //Groups my results by year and month
    ORDER BY BorrowCount DESC // Descending order so I can get the top 1
    LIMIT 1;

Month    BorrowCount
-------  -----------
2017-10  10         


12. Average number of borrows by age
    //I already created a DOB index for my clients 
    //Assuming the prompt is asking for all, I wont use LIMIT
    WITH AgeBorrows AS ( // Common table expression I have calculating the age of the Clients 
    SELECT
        (2024 - c.ClientDoB) AS Age,
        COUNT(br.BorrowID) AS BorrowCount //Counts the number of borrows for each Client
    FROM Client c
    LEFT JOIN Borrower br ON c.ClientID = br.ClientID // This joins the tables clients and borrowed to include those who havent borrowed books
    GROUP BY c.ClientID
    )
    SELECT Age, AVG(BorrowCount) AS AvgBorrowedBooks // Column names for display // I used mode. column to format with column headers
    FROM AgeBorrows
    GROUP BY Age;
    //I should've used the ROUND keyword to shorten the decimals in the answers

Age  AvgBorrowedBooks
---  ----------------
14   2.33333333333333
15   0.0             
16   6.0             
17   5.0             
18   3.66666666666667
19   4.5             
20   1.5             
21   5.0             
22   2.0             
23   4.5             
25   3.66666666666667
26   2.0             
28   2.0             
29   4.5             
30   10.0            
32   3.0             
34   5.5             
37   2.0             
38   3.0             
39   4.0             
40   5.5             
41   3.0             
42   3.0             
43   2.0             
44   1.0             
45   4.33333333333333
46   5.5             
47   3.0             
48   3.5             
49   2.66666666666667
50   3.25            
51   3.66666666666667
54   4.5             
56   4.0             
57   3.0             
58   1.0             
61   2.5             
62   3.0             
64   3.66666666666667



13. The oldest and the youngest clients of the library
    // I could just look at the previous query but here is how I would do that:
    SELECT ClientFirstName, ClientLastName, ClientDoB
    FROM Client
    ORDER BY ClientDoB ASC
    LIMIT 1;
    SELECT ClientFirstName, ClientLastName, ClientDoB
    FROM Client
    ORDER BY ClientDoB DESC
    LIMIT 1;

ClientFirstName  ClientLastName  ClientDOB
---------------  --------------  ---------
Mya              Austin          1960     

ClientFirstName  ClientLastName  ClientDOB
---------------  --------------  ---------
Joan             Grant           2010  


14. First and last names of authors that wrote books in more than one genre
    //My db would use the Genre index I made for this
    SELECT a.AuthorFirstName, a.AuthorLastName
    FROM Author a
    JOIN Book b ON a.AuthorID = b.AuthorID
    GROUP BY a.AuthorID, a.AuthorFirstName, a.AuthorLastName
    HAVING COUNT(DISTINCT b.Genre) > 1;

There was no Author in my DB that had written books in multiple genres. It would have returned the
first and last names of the Authors who qualified.
